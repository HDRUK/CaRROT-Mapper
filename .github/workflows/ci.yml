name: ci
on: [pull_request]

jobs:
  pylint:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    env:
      RUNNER_ALLOW_RUNASROOT: true
    steps:
      - uses: actions/checkout@v2
      - run: git fetch origin master:refs/remotes/origin/master
      - run: git status
      - run: git branch -a
      - run: git diff master HEAD
      - run: git diff origin/master HEAD
      - run: git diff origin/master HEAD --name-only
      #- name: Install pylint
      #  run: pip3 install pylint
      #- name: List changed files
      #  run: |
      #    echo `git diff origin/master --name-only | grep .py` >> changed.txt
      #- name: Check PEP8
      #  run: |
      #    cat changed.txt | xargs pylint
  build:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    env:
      RUNNER_ALLOW_RUNASROOT: true
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Make envfile
        run: |
          touch .env
          echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env 
          echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
          echo POSTGRES_DB=${{ secrets.POSTGRES_DB }} >> .env 
          echo POSTGRES_HOST=${{ secrets.POSTGRES_HOST }} >> .env 
          echo POSTGRES_PORT=${{ secrets.POSTGRES_PORT }} >> .env 
          
          echo COCONNECT_DB_ENGINE=django.db.backends.postgresql >> .env  
          echo COCONNECT_DB_HOST=\${POSTGRES_HOST} >> .env  
          echo COCONNECT_DB_PORT=\${POSTGRES_PORT} >> .env  
          echo COCONNECT_DB_NAME=\${POSTGRES_DB} >> .env  
          echo COCONNECT_DB_USER=\${POSTGRES_USER} >> .env  
          echo COCONNECT_DB_PASSWORD=\${POSTGRES_PASSWORD} >> .env

          echo OMOP_POSTGRES_HOST=${{ secrets.OMOP_POSTGRES_HOST }} >> .env 
          echo OMOP_POSTGRES_USER=${{ secrets.OMOP_POSTGRES_USER }} >> .env  
          echo OMOP_POSTGRES_PASSWORD=${{ secrets.OMOP_POSTGRES_PASSWORD }} >> .env  
          echo OMOP_POSTGRES_PORT=${{ secrets.OMOP_POSTGRES_PORT }} >> .env  
          echo OMOP_POSTGRES_DB=${{ secrets.OMOP_POSTGRES_DB }} >> .env  
          
          echo PROJECT_NAME=api >> .env 
          cat .env
      - name: Build the docker-compose stack
        run: docker-compose build 
      - name: Run the dokcer-compose stack
        run: |
          #startup the stack
          docker-compose up -d
          #give it a minute to start properly
          sleep 1m
          #check the logs for errors
          if docker-compose logs | grep -i -q ERROR  ; then
              #print the errors before causing a fail
              docker-compose logs | grep -i ERROR
              echo "Errors found"
              exit 1
          else
             echo "No errors found!"
          fi
          #put the logs into a file
          docker-compose logs >> logs.out
          #shutdown the stack
          docker-compose down
      #save the logs so they can be further checked 
      - uses: actions/upload-artifact@v2
        with:
          name: my-artifact
          path: logs.out
          retention-days: 1
