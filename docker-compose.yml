name: carrot-mapper-dev-test

services:
  db:
    image: postgres:13
    restart: always
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=postgres

  azurite:
    image: mcr.microsoft.com/azure-storage/azurite
    restart: always
    ports:
      - "10000:10000"
      - "10001:10001"
      - "10002:10002"

  # next-client:
  #   image: carrot-next-client
  #   build:
  #     context: app/next-client-app
  #     dockerfile: Dockerfile
  #   ports:
  #     - 3000:3000
  #   environment:
  #     - BACKEND_URL: http://web:8000
  #     - BACKEND_ORIGIN: "web:8000"
  #   # Mount the code directory
  #   volumes:
  #     - ./app/next-client-app:/app/next-client-app

  # workers:
  #   image: carrot-workers
  #   build:
  #     context: app/workers
  #     dockerfile: Dockerfile
  #   ports:
  #     - 8080:80
  #   environment:
  #     IsEncrypted: 'false'
  #     AzureWebJobsStorage: 'UseDevelopmentStorage=true'
  #     FUNCTIONS_WORKER_RUNTIME: 'python'
  #     STORAGE_CONN_STRING: 'DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;QueueEndpoint=http://localhost:10001/devstoreaccount1;BlobEndpoint=http://localhost:10000/devstoreaccount1;'
  #     NLP_API_KEY: ''
  #     APP_URL: 'http://localhost:8000/'
  #     AZ_FUNCTION_KEY: '53756e8553c47897cebf6d6d730cf2e69ac4a46e'
  #     SCAN_REPORT_QUEUE_NAME: 'scanreports-local'
  #     NLP_QUEUE_NAME: 'nlpqueue-local'
  #     UPLOAD_QUEUE_NAME: 'uploadreports-local'
  #     CREATE_CONCEPTS_QUEUE_NAME: 'conceptqueue-local'
  #     RULES_QUEUE_NAME: 'rules-local'
  #     PAGE_MAX_CHARS: '30000'
  #     CHUNK_SIZE: '6'
  #   # Mount the code directory
  #   volumes:
  #     - ./app/workers:/app/workers
  #   depends_on:
  #     - web

  # omop-lite:
  #   image: ghcr.io/andyrae/omop-lite
  #   volumes:
  #     - ./vocabs:/vocabs
  #   depends_on:
  #     - db
  #   environment:
  #     - DB_PASSWORD=postgres (authentication fail, wrong password, changed to postgres --> worked)
  #     - DB_NAME=omop (database "omop" does not exist in db and error="pq: database \"omop\" does not exist here)

  web:
    image: carrot
    build:
      context: app
      dockerfile: Dockerfile
    ports:
      - 8000:8000
    env_file:
      - .env
    volumes:
      - $PWD/api:/api
    depends_on:
      - db
      - azurite
